{"remainingRequest":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\docs\\undivided\\typeScript.md?vue&type=template&id=b206bcb6&","dependencies":[{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\docs\\undivided\\typeScript.md","mtime":1613981862434},{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\file\\githubWorkSpace\\技术文档\\dylin_techdocument\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}